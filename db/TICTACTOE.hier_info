|TicTacToe
sel => Pcondition.IN1
next => next.IN1
rst => rst.IN5
clk => clk.IN4
Fclk => Fclk.IN1
a[0] << a[0].DB_MAX_OUTPUT_PORT_TYPE
a[1] << a[1].DB_MAX_OUTPUT_PORT_TYPE
b[0] << b[0].DB_MAX_OUTPUT_PORT_TYPE
b[1] << b[1].DB_MAX_OUTPUT_PORT_TYPE
c[0] << c[0].DB_MAX_OUTPUT_PORT_TYPE
c[1] << c[1].DB_MAX_OUTPUT_PORT_TYPE
d[0] << d[0].DB_MAX_OUTPUT_PORT_TYPE
d[1] << d[1].DB_MAX_OUTPUT_PORT_TYPE
e[0] << e[0].DB_MAX_OUTPUT_PORT_TYPE
e[1] << e[1].DB_MAX_OUTPUT_PORT_TYPE
f[0] << f[0].DB_MAX_OUTPUT_PORT_TYPE
f[1] << f[1].DB_MAX_OUTPUT_PORT_TYPE
g[0] << g[0].DB_MAX_OUTPUT_PORT_TYPE
g[1] << g[1].DB_MAX_OUTPUT_PORT_TYPE
h[0] << h[0].DB_MAX_OUTPUT_PORT_TYPE
h[1] << h[1].DB_MAX_OUTPUT_PORT_TYPE
i[0] << i[0].DB_MAX_OUTPUT_PORT_TYPE
i[1] << i[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|positionMachine:myPositionMachine
clk => state~1.DATAIN
rst => state~3.DATAIN
next => Selector1.IN3
next => Selector2.IN3
next => Selector3.IN3
next => Selector4.IN3
next => Selector5.IN3
next => Selector6.IN3
next => Selector7.IN3
next => Selector8.IN3
next => Selector0.IN3
next => Selector0.IN1
next => Selector1.IN1
next => Selector2.IN1
next => Selector3.IN1
next => Selector4.IN1
next => Selector5.IN1
next => Selector6.IN1
next => Selector7.IN1
next => Selector8.IN1
pos[0] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
pos[1] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
pos[2] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
pos[3] <= pos[3].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|randomModule:myrandom
rst => state1[0].ACLR
rst => state1[1].ACLR
rst => state1[2].ACLR
rst => state1[3].ACLR
clk => state1[0].CLK
clk => state1[1].CLK
clk => state1[2].CLK
clk => state1[3].CLK
pos[0] <= state1[0].DB_MAX_OUTPUT_PORT_TYPE
pos[1] <= state1[1].DB_MAX_OUTPUT_PORT_TYPE
pos[2] <= state1[2].DB_MAX_OUTPUT_PORT_TYPE
pos[3] <= state1[3].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|muxCustom:themux
a[0] => out.DATAA
a[1] => out.DATAA
a[2] => out.DATAA
a[3] => out.DATAA
b[0] => out.DATAB
b[1] => out.DATAB
b[2] => out.DATAB
b[3] => out.DATAB
sel => Decoder0.IN0
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill
position[0] => position[0].IN9
position[1] => position[1].IN9
position[2] => position[2].IN9
position[3] => position[3].IN9
sel => sel.IN9
Pl => Pl.IN9
clk => clk.IN9
rst => rst.IN9
a[0] <= squareBox:c0.out
a[1] <= squareBox:c0.out
b[0] <= squareBox:c1.out
b[1] <= squareBox:c1.out
c[0] <= squareBox:c2.out
c[1] <= squareBox:c2.out
d[0] <= squareBox:c3.out
d[1] <= squareBox:c3.out
e[0] <= squareBox:c4.out
e[1] <= squareBox:c4.out
f[0] <= squareBox:c5.out
f[1] <= squareBox:c5.out
g[0] <= squareBox:c6.out
g[1] <= squareBox:c6.out
h[0] <= squareBox:c7.out
h[1] <= squareBox:c7.out
i[0] <= squareBox:c8.out
i[1] <= squareBox:c8.out


|TicTacToe|playGrill:grill|squareBox:c0
code[0] => Equal0.IN3
code[1] => Equal0.IN2
code[2] => Equal0.IN1
code[3] => Equal0.IN0
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c1
code[0] => Equal0.IN0
code[1] => Equal0.IN3
code[2] => Equal0.IN2
code[3] => Equal0.IN1
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c2
code[0] => Equal0.IN3
code[1] => Equal0.IN0
code[2] => Equal0.IN2
code[3] => Equal0.IN1
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c3
code[0] => Equal0.IN1
code[1] => Equal0.IN0
code[2] => Equal0.IN3
code[3] => Equal0.IN2
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c4
code[0] => Equal0.IN3
code[1] => Equal0.IN2
code[2] => Equal0.IN0
code[3] => Equal0.IN1
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c5
code[0] => Equal0.IN1
code[1] => Equal0.IN3
code[2] => Equal0.IN0
code[3] => Equal0.IN2
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c6
code[0] => Equal0.IN3
code[1] => Equal0.IN1
code[2] => Equal0.IN0
code[3] => Equal0.IN2
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c7
code[0] => Equal0.IN2
code[1] => Equal0.IN1
code[2] => Equal0.IN0
code[3] => Equal0.IN3
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playGrill:grill|squareBox:c8
code[0] => Equal0.IN3
code[1] => Equal0.IN2
code[2] => Equal0.IN1
code[3] => Equal0.IN0
sel => always1.IN1
pl => always1.IN1
pl => always1.IN1
rst => state~3.DATAIN
clk => state~1.DATAIN
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|playerIterator:myiterator
clk => state.CLK
rst => state.ACLR
change => nextState.DATAA
change => nextState.DATAB
player <= state.DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|cronometer:mycronometer
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
manualRst => nextCount[29].OUTPUTSELECT
manualRst => nextCount[28].OUTPUTSELECT
manualRst => nextCount[27].OUTPUTSELECT
manualRst => nextCount[26].OUTPUTSELECT
manualRst => nextCount[25].OUTPUTSELECT
manualRst => nextCount[24].OUTPUTSELECT
manualRst => nextCount[23].OUTPUTSELECT
manualRst => nextCount[22].OUTPUTSELECT
manualRst => nextCount[21].OUTPUTSELECT
manualRst => nextCount[20].OUTPUTSELECT
manualRst => nextCount[19].OUTPUTSELECT
manualRst => nextCount[18].OUTPUTSELECT
manualRst => nextCount[17].OUTPUTSELECT
manualRst => nextCount[16].OUTPUTSELECT
manualRst => nextCount[15].OUTPUTSELECT
manualRst => nextCount[14].OUTPUTSELECT
manualRst => nextCount[13].OUTPUTSELECT
manualRst => nextCount[12].OUTPUTSELECT
manualRst => nextCount[11].OUTPUTSELECT
manualRst => nextCount[10].OUTPUTSELECT
manualRst => nextCount[9].OUTPUTSELECT
manualRst => nextCount[8].OUTPUTSELECT
manualRst => nextCount[7].OUTPUTSELECT
manualRst => nextCount[6].OUTPUTSELECT
manualRst => nextCount[5].OUTPUTSELECT
manualRst => nextCount[4].OUTPUTSELECT
manualRst => nextCount[3].OUTPUTSELECT
manualRst => nextCount[2].OUTPUTSELECT
manualRst => nextCount[1].OUTPUTSELECT
manualRst => nextCount[0].OUTPUTSELECT
timeout <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|checkEmpty:myCheckPos
a[0] => Equal0.IN1
a[1] => Equal0.IN0
b[0] => Equal1.IN1
b[1] => Equal1.IN0
c[0] => Equal2.IN1
c[1] => Equal2.IN0
d[0] => Equal3.IN1
d[1] => Equal3.IN0
e[0] => Equal4.IN1
e[1] => Equal4.IN0
f[0] => Equal5.IN1
f[1] => Equal5.IN0
g[0] => Equal6.IN1
g[1] => Equal6.IN0
h[0] => Equal7.IN1
h[1] => Equal7.IN0
i[0] => Equal8.IN1
i[1] => Equal8.IN0
pos[0] => Mux0.IN19
pos[1] => Mux0.IN18
pos[2] => Mux0.IN17
pos[3] => Mux0.IN16
flag <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|TicTacToe|checkEmpty:myCheckPosRandom
a[0] => Equal0.IN1
a[1] => Equal0.IN0
b[0] => Equal1.IN1
b[1] => Equal1.IN0
c[0] => Equal2.IN1
c[1] => Equal2.IN0
d[0] => Equal3.IN1
d[1] => Equal3.IN0
e[0] => Equal4.IN1
e[1] => Equal4.IN0
f[0] => Equal5.IN1
f[1] => Equal5.IN0
g[0] => Equal6.IN1
g[1] => Equal6.IN0
h[0] => Equal7.IN1
h[1] => Equal7.IN0
i[0] => Equal8.IN1
i[1] => Equal8.IN0
pos[0] => Mux0.IN19
pos[1] => Mux0.IN18
pos[2] => Mux0.IN17
pos[3] => Mux0.IN16
flag <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


